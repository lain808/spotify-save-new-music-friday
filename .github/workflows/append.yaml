name: Append songs

on:
  schedule:
  - cron: '00 10 * * 6'
  workflow_dispatch:

jobs:
  execute-cron:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code	
        uses: actions/checkout@v3

      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Requirements
        run: pip install -r requirements.txt

      - name: Execute Python script
        run: python main.py
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          NEW_MUSIC_FRIDAY_ID: ${{ secrets.NEW_MUSIC_FRIDAY_ID }}
          SAVE_TO_ID: ${{ secrets.SAVE_TO_ID }}
          
      - name: Keepalive Workflow
        uses: gautamkrishnar/keepalive-workflow@1.1.0
   

  run-if-failed:
      runs-on: ubuntu-latest
      needs: [execute-cron]
      if: always() && (needs.execute-cron.result == 'failure')
      steps:
        - name: Sleep Action
          uses: juliangruber/sleep-action@v1.0.1
          with:
            time: 10m

        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Setup Python Environment
          uses: actions/setup-python@v4
          with:
            python-version: 3.8

        - name: Install Requirements
          run: pip install -r requirements.txt

        - name: Execute Python script
          run: python main.py
          env:
            CLIENT_ID: ${{ secrets.CLIENT_ID }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
            REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
            NEW_MUSIC_FRIDAY_ID: ${{ secrets.NEW_MUSIC_FRIDAY_ID }}
            USER_ID: ${{ secrets.USER_ID }}
